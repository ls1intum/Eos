plugins {
    id "java"
    id "maven-publish"
    id "signing"
    id "com.diffplug.spotless" version "6.25.0"
    id "java-library"
    id "org.jreleaser" version "1.16.0"
}

group = "de.tum.cit.ase"
archivesBaseName = "eos"
version = "1.0.0"

repositories {
    mavenCentral()
}

dependencies {
    // Ares
    api "ch.qos.logback:logback-classic:1.5.3"
    api "org.hamcrest:hamcrest:2.2"
    api "org.assertj:assertj-core:3.25.3"
    api "org.json:json:20240303"
    api "info.debatty:java-string-similarity:2.0.0"
    api "com.github.javaparser:javaparser-core:3.25.9"
    api platform("org.junit:junit-bom:5.10.2")
    api "org.junit.jupiter:junit-jupiter-api"
    api "org.junit.platform:junit-platform-launcher"
    api "org.junit.jupiter:junit-jupiter-engine"
    api "org.junit.jupiter:junit-jupiter-params"
    api "org.junit.vintage:junit-vintage-engine"
    api "org.junit.platform:junit-platform-testkit"

    api "org.apache.commons:commons-lang3:3.17.0"

    api "org.openjfx:javafx-base:${javafx_version}:win"
    api "org.openjfx:javafx-base:${javafx_version}:mac"
    api "org.openjfx:javafx-base:${javafx_version}:linux"

    api "org.openjfx:javafx-graphics:${javafx_version}:win"
    api "org.openjfx:javafx-graphics:${javafx_version}:mac"
    api "org.openjfx:javafx-graphics:${javafx_version}:linux"

    api "org.openjfx:javafx-controls:${javafx_version}:win"
    api "org.openjfx:javafx-controls:${javafx_version}:mac"
    api "org.openjfx:javafx-controls:${javafx_version}:linux"

    api "org.openjfx:javafx-swing:${javafx_version}:win"
    api "org.openjfx:javafx-swing:${javafx_version}:mac"
    api "org.openjfx:javafx-swing:${javafx_version}:linux"

    api "org.testfx:testfx-core:4.0.16-alpha"
    api "org.testfx:testfx-junit5:4.0.16-alpha"

    api "org.testfx:openjfx-monocle:17.0.10"
}

java {
    withSourcesJar()
    withJavadocJar()

    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

def forbiddenPaths = [
    "build/classes/java/main/ch/qos/logback/",
    "build/classes/java/main/com/intellij/",
    "build/classes/java/main/com/sun/",
    "build/classes/java/main/java/",
    "build/classes/java/main/javax/",
    "build/classes/java/main/jdk/",
    "build/classes/java/main/net/jqwik/",
    "build/classes/java/main/org/apache/",
    "build/classes/java/main/org/assertj/",
    "build/classes/java/main/org/eclipse/",
    "build/classes/java/main/org/jacoco/",
    "build/classes/java/main/org/json/",
    "build/classes/java/main/org/junit/",
    "build/classes/java/main/org/opentest4j/",
    "build/classes/java/main/sun/",
    "build/classes/java/main/com/github/javaparser/",
    "build/classes/java/main/org/gradle/",
    "build/classes/java/main/worker/org/gradle/"
]

tasks.register("enforceNoStudentCode") {
    doLast {
        forbiddenPaths.forEach { path ->
            if (file(path).exists()) {
                throw GradleException("Forbidden file exists: $path")
            }
        }
    }
}

// Ensure the task runs as part of the build
tasks.named("check") {
    dependsOn("enforceNoStudentCode")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = "Eos"
                description = "Headless JavaFX Testing Framework for Education"
                url = "https://github.com/ls1intum/Eos"

                licenses {
                    license {
                        name = "MIT"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }

                developers {
                    developer {
                        name = "Benjamin Schmitz"
                        email = "benjamin.schmitz@tum.de"
                        organization = "TUM Applied Education Technologies"
                        organizationUrl = "https://aet.cit.tum.de"
                    }
                }

                scm {
                    connection = "scm:git:https://github.com/ls1intum/Eos"
                    developerConnection = "scm:git:https://github.com/ls1intum/Eos"
                    url = "https://github.com/ls1intum/Eos"
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir("staging-deploy")
        }
    }
}

jreleaser {
    project {
        description = "Headless JavaFX Testing Framework for Education"
        copyright = "2025 TUM Applied Education Technologies"
    }

    signing {
        active = "ALWAYS"
        armored = true
    }

    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = "ALWAYS"
                    url = "https://central.sonatype.com/api/v1/publisher"
                    stagingRepository("build/staging-deploy")
                    applyMavenCentralRules = true
                    verifyUrl = "https://repo1.maven.org/maven2/{{path}}/{{filename}}"
                }
            }
        }
    }
}

// Taken from the Artemis build.gradle (https://github.com/ls1intum/Artemis/blob/327857d0233168b77625451aa2136577a05be4ca/build.gradle)
spotless {
    java {
        target {
            fileTree(rootDir) {
                include (
                        "src/main/java/de/tum/cit/ase/eos/*.java",
                        )
            }
        }
        importOrderFile "spotless.importorder"
        eclipse("4.33").configFile "spotless-style.xml"

        removeUnusedImports()
        trimTrailingWhitespace()
    }

    groovyGradle {
        target "*.gradle"
        greclipse().configFile("greclipse.properties")
    }
}

test {
    useJUnitPlatform()
}
